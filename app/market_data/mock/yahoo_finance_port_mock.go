// Code generated by MockGen. DO NOT EDIT.
// Source: port.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	yahoo_finance_go "github.com/Ch2r1Ie/Stock-Bubble/yahoo_finance.go"
	gomock "go.uber.org/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// Info mocks base method.
func (m *MockAPI) Info(symbol, dateRange, interval string) (yahoo_finance_go.Stock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Info", symbol, dateRange, interval)
	ret0, _ := ret[0].(yahoo_finance_go.Stock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Info indicates an expected call of Info.
func (mr *MockAPIMockRecorder) Info(symbol, dateRange, interval interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockAPI)(nil).Info), symbol, dateRange, interval)
}
